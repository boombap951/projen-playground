# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: release
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: ${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - env:
          RELEASE: "true"
        name: release
        run: rm -fr dist
      - id: should_release_bump
        run: '! git log --oneline -1 | grep -q "chore(release):"'
        continue-on-error: true
      - if: steps.should_release_bump.outcome == 'success'
        env:
          OUTFILE: package.json
          CHANGELOG: dist/changelog.md
          BUMPFILE: dist/version.txt
          RELEASETAG: dist/releasetag.txt
        name: release » bump
        run: /Users/benisrae/.nvm/versions/node/v14.17.0/bin/node
          /Users/benisrae/code/projen2/lib/release/bump-version.task.js
      - name: release » build » default
        run: node .projenrc.js
      - name: release » build » compile
        run: tsc --build
      - name: release » build » test
        run: jest --passWithNoTests --all --updateSnapshot
      - name: release » build » test » eslint
        run: eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src test
          build-tools .projenrc.js
      - name: release » build » package
        run: mkdir -p dist/js
      - name: release » build » package
        run: yarn pack
      - name: release » build » package
        run: mv *.tgz dist/js/
      - env:
          OUTFILE: package.json
          CHANGELOG: dist/changelog.md
          BUMPFILE: dist/version.txt
          RELEASETAG: dist/releasetag.txt
        name: release » unbump
        run: /Users/benisrae/.nvm/versions/node/v14.17.0/bin/node
          /Users/benisrae/code/projen2/lib/release/reset-version.task.js
      - env:
          RELEASE: "true"
        name: release
        run: git diff --ignore-space-at-eol --exit-code
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::"$(git ls-remote origin -h ${{
          github.ref }} | cut -f1)"
      - name: Upload artifact
        if: ${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: errout=$(mktemp); gh release create $(cat dist/releasetag.txt) -R
          $GITHUB_REPOSITORY -F dist/changelog.md -t $(cat dist/releasetag.txt)
          --target $GITHUB_REF 2> $errout && true; exitcode=$?; if [ $exitcode
          -ne 0 ] && ! grep -q "Release.tag_name already exists" $errout; then
          cat $errout; exit $exitcode; fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF: ${{ github.ref }}
